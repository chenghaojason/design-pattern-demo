桥接模式（Bridge Pattern）-结构型模式
定义：将抽象部分与他的实现部分分离（解耦），使它们都可以独立的变化。桥接模式将继承关系转换为关联关系，降低了类与类之间的耦合。是一种对象结构性模式。

桥接模式包含四个角色：
1.抽象类（Abstraction）：一般是抽象类而不是接口，定义了一个Implementor接口类型的成员对象和抽象的业务方法（也可以使具体的业务方法）。
2.扩充抽象类（Refined Abstraction）：抽象类（Abstraction）的子类，是一个具体的类，继承自Abstraction抽象类。实现了抽象层的业务方法，也可以调用实现类接口（Implementor）中的业务方法。
3.实现类接口（Implementor）：只提供基本的一些操作，具体的业务实现在其子类（也就是实现类）中体现。
4.具体实现类（Concrete Implementor）：实现了Implementor接口，在不同的实现类中实现不同的业务方法。

桥接模式的主要体现是将抽象化和实现化解耦。抽象化和实现化是一对互逆的概念。

优点：
1.分离抽象接口及其实现部分，使用“对象的关联关系”代替了继承关系。
2.使抽象部分和实现接口各自具有自己的子类，在其维度自由变化。
3.桥接模式提供了系统的可扩展性。

缺点：
1.桥接模式的引入会增加系统的理解和设计难度。
2.桥接模式要求要正确的识别出两个独立的变化维度，或者多个维度。

附：
桥接模式适用于系统的初步设计阶段。
适配器模式适用于程序设计完成后，发现系统和已有的类无法协同工作时使用。



