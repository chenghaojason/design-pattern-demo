结构型模式（Structural Pattern）介绍:
该类型模式描述的是如何将类或者对象结合在一起形成更强大的结构。因此结构性模式又分为两种：类结构性模式和对象结构性模式。
大部分模式都是对象结构性们模式。
结构性模式大致分为7种：
1.适配器模式（Adapter Pattern）：将一个类的接口转换成用户希望的另一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
2.桥接模式（Bridge Pattern）：将抽象部分与实现部分分离，是他们都可以独立地变化。
3.组合模式（Composite）：将对象组合成树形结构以表示“部分——整体”的层次结构。它使得客户对单个对象和复合对象的使用具有一致性。
4.装饰模式（Decorator Pattern）：动态的给一个对象添加一些额外的职责，就扩展功能而言，它比生成子类方式更为灵活。（不使用继承而通过关联关系来调用现有类中的方法，达到复用的目的，并使得对象的行为可以灵活变化）
5.外观模式（Facade Pattern）：为子系统中的一组接口提供一个统一的入口，定义一个高层接口，这个接口使得这一子系统更加容易使用。（为复杂的子系统提供一个统一的入口，简化客户端对多个子系统的访问）
6.享元模式（Flyweight Pattern）：运用共享技术有效的支持大量细粒度的对象。
7.代理模式（Proxy Pattern）：为其他对象提供一个代理以控制对这个对象的访问。（当不能直接访问一个对象时，通过一个代理对象间接访问它）