组合模式（Composite Pattern）-结构型模式
定义：组合多个对象形成树形结构以表示“部分-整体”的结构层次（如：文件夹和文件）。组合模式对单个对象（叶子对象）和组合对象（容器对象）具有与一致性。
组合模式描述了如何将容器对象和叶子对象进行递归组合。
叶子构件在组合模式中表示叶子节点对象，叶子节点没有子节点；
容器构件在组合模式中表示容器节点对象，容器节点包含子节点，子节点可以是叶子节点也可以是容器节点。

组合模式有三个角色：
1.抽象构件（Component）：抽象构件可以是接口也可以是抽象类，为叶子构件和容器构件声明接口。抽象构件中定义了所有子类共有的行为声明。
2.容器构件（Composite）：容器构件在组合模式中表示容器节点对象。容器节点包含子节点，子节点可以是叶子节点也可以是容器节点。
    在容器构件内定义了一个集合，用于存储子节点对象。并实现了在抽象构件中声明的行为方法，在其业务方法中可以通过递归调用子节点的业务方法。
3.叶子构件（Leaf）：叶子构件在组合模式中表示叶子节点，叶子节点没有子节点。实现了在抽象构件中定义的业务行为方法，但是对于那些管理叶子构件的方法进行了异常处理。

组合模式又分为：透明组合模式和安全组合模式。
透明组合模式：在抽象构件中定义所有叶子构件和容器构件所需要的行为方法。
安全组合模式：在抽象构件中只定义叶子构件和容器构件共有的行为方法。

优点：可以方便的对层次结构进行控制。
缺点：使设计变得更加抽象，而且很难对容器中构件类型进行限制。