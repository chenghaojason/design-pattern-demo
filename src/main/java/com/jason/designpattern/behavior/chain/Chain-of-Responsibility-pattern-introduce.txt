职责链模式（Chain of Responsibility Pattern）:

定义：避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连成一条链，并且沿着这条链传递请求，直到有对象处理它为止。

模式结构：
    1.Handler（抽象处理者）：一般设计为抽象类。在里面定义了一个自身的变量和处理请求的方法。
    2.ConcreteHandler（具体处理者）：实现了抽象处理者的处理方法，判断是否有处理请求的权限，如果有则处理请求。
    3.Client（客户类）：提出请求的对象。

适用场景：
    1.由多个对象可以处理请求，具体哪个对象处理请求则是由配置的规则决定。
    2.在不明确指定处理者的时候，向多个对象中的一个发送请求。请求的发送者与处理者解耦。
    3.可动态指定一组对象处理请求。

在java中的异常捕获一样，第一个异常不匹配则由第二个异常捕获，如果第二个异常也不匹配则由第三个异常捕获，以此类推，如果都不捕获，则抛出异常。

