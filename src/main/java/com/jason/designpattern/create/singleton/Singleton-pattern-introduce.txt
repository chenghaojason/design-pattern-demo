单例模式（Sinleton Pattern）
通过单例模式可以保证系统中一个类只有一个实例而且该实例易于被外界访问，从而节约系统资源。
单例模式只包含一个Singleton（单例角色）类。
单例模式的三个要点：
    1.某个类只能有一个实例。
    2.它必须自行创建这个实例。
    3.它必须自行向整个系统提供这个实例。
实现单例模式的三个特点：
    1.该类的构造器为私有化。
    2.提供一个自身的静态私有成员变量。
    3.提供一个共有的（即public修饰的）静态方法返回这个实例。
单例模式分为：
    饿汉模式（线程安全）
    懒汉模式
        一般懒汉模式（线程不安全）
        同步懒汉模式（线程安全）
        双重检查锁定懒汉模式（线程安全）

单例模式的优点：
    提供了对对象唯一实例的控制，以此可以节约系统资源。也可以该变实例的数目，使其变成多例模式。
缺点：
    由于单例模式没有抽象层，因此扩展起来比较困难。
    违反了“单一职责原则”。
    滥用会带来很多负面影响。