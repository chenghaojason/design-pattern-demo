建造者模式（Builder Pattern）
也叫做生成器模式。
建造者模式时最复杂的创建型模式。
定义：用于创建一个包含多个组成部分的复杂对象，可以返回一个完整的产品对象给用户。
    也就是将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。

抽象建造者（Builder）：为创建一个产品对象的各个部件指定抽象接口。在接口中一般声明两类方法，一类是buildPartX()，用于创建复杂对象的各个部件，
    一类方法是getResult()用于返回复杂对象。既可以是抽象类也可以是接口。
具体建造者（ConcreteBuilder）：具体创建者实现了Builder接口，实现了各个部件的构造和装配方法定义并明确他所创建的复杂对象。
产品角色（Product）：产品角色是被构建的复杂对象，包含多个组成部件。
指挥者（Director）：指挥者又称为导演类。它负责安排复杂对象的建造次序。可以在其construct()建造方法中调用建造者对象的部件构造和装配方法，完成复杂对象的建造。
    客户端一般只与指挥者交互，在客户端确定具体建造者类型，实例化其对象，并通过指挥类的构造函数或者setter方法将该对象注入到指挥者中。
    指挥者类主要作用：
        1.隔离了客户端与生产过程。
        2.负责控制产品的生成过程。

