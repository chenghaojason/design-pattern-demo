说明：
抽象工厂模式（Abstract Factory Pattern）
定义：提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们具体的类。属于对象创建型模式。
抽象工厂模式是所有形式的工厂模式中最为抽象和具有一般性的一种形态。
对“开闭原则”的支持具有其独特性。另外，应用抽象模式可以实现高内聚低耦合的设计目的。
抽象工厂模式包含四个角色：
1.抽象工厂
2.具体工厂
3.抽象产品
4.具体产品
抽象工厂模式和工厂方法模式的最大区别是：抽象工厂模式是面对多个产品等级结构，而工厂方法模式面对的是单个产品。

抽象工厂模式适用场景：
一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；
系统中有多于一个的产品族，而每次只使用其中某一产品族；
属于同一个产品族的产品将在一起使用；
系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体的实现。
